{"ast":null,"code":"import axios from \"axios\";\nimport { getUsersFailure, getUsersStart, getUsersSuccess } from \"./UserActions\";\nexport const getUsers = async dispatch => {\n  dispatch(getUsersStart());\n\n  try {\n    const res = await axios.get(\"/users\", {\n      headers: {\n        token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken\n      }\n    });\n    dispatch(getUsersSuccess(res.data));\n  } catch (err) {\n    dispatch(getUsersFailure());\n  }\n};\n/*\r\n//create\r\nexport const createMovie = async (movie, dispatch) => {\r\n    dispatch(createMovieStart());\r\n    try {\r\n        const res = await axios.post(\"/movies\", movie, {\r\n            headers: {\r\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n        });\r\n        dispatch(createMovieSuccess(res.data));\r\n    } catch (err) {\r\n        dispatch(createMovieFailure());\r\n    }\r\n};\r\n\r\n//delete\r\nexport const deleteMovie = async (id, dispatch) => {\r\n    dispatch(deleteMovieStart());\r\n    try {\r\n        await axios.delete(\"/movies/\" + id, {\r\n            headers: {\r\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n        });\r\n        dispatch(deleteMovieSuccess(id));\r\n    } catch (err) {\r\n        dispatch(deleteMovieFailure());\r\n    }\r\n};\r\n*/","map":{"version":3,"sources":["C:/Users/AURES/Desktop/youtube-react-admin/src/context/userContext/apiCalls.js"],"names":["axios","getUsersFailure","getUsersStart","getUsersSuccess","getUsers","dispatch","res","get","headers","token","JSON","parse","localStorage","getItem","accessToken","data","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEIC,eAFJ,EAGIC,aAHJ,EAIIC,eAJJ,QAKO,eALP;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAAoB;AACxCA,EAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;;AACA,MAAI;AACA,UAAMI,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,QAAV,EAAoB;AAClCC,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,YAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AADvD;AADyB,KAApB,CAAlB;AAKAT,IAAAA,QAAQ,CAACF,eAAe,CAACG,GAAG,CAACS,IAAL,CAAhB,CAAR;AACH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVX,IAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACH;AACJ,CAZM;AAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n\r\n    getUsersFailure,\r\n    getUsersStart,\r\n    getUsersSuccess,\r\n} from \"./UserActions\";\r\n\r\nexport const getUsers = async (dispatch) => {\r\n    dispatch(getUsersStart());\r\n    try {\r\n        const res = await axios.get(\"/users\", {\r\n            headers: {\r\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n        });\r\n        dispatch(getUsersSuccess(res.data));\r\n    } catch (err) {\r\n        dispatch(getUsersFailure());\r\n    }\r\n};\r\n/*\r\n//create\r\nexport const createMovie = async (movie, dispatch) => {\r\n    dispatch(createMovieStart());\r\n    try {\r\n        const res = await axios.post(\"/movies\", movie, {\r\n            headers: {\r\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n        });\r\n        dispatch(createMovieSuccess(res.data));\r\n    } catch (err) {\r\n        dispatch(createMovieFailure());\r\n    }\r\n};\r\n\r\n//delete\r\nexport const deleteMovie = async (id, dispatch) => {\r\n    dispatch(deleteMovieStart());\r\n    try {\r\n        await axios.delete(\"/movies/\" + id, {\r\n            headers: {\r\n                token: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).accessToken,\r\n            },\r\n        });\r\n        dispatch(deleteMovieSuccess(id));\r\n    } catch (err) {\r\n        dispatch(deleteMovieFailure());\r\n    }\r\n};\r\n*/"]},"metadata":{},"sourceType":"module"}