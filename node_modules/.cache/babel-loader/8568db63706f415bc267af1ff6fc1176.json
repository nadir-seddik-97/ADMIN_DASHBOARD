{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AURES\\\\Desktop\\\\youtube-react-admin\\\\src\\\\pages\\\\productList\\\\ProductList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./productList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { productRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { MovieContext } from \"../../context/movieContext/MovieContext\";\nimport { deleteMovie, getMovies } from \"../../context/movieContext/apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductList() {\n  _s();\n\n  const {\n    movies,\n    dispatch\n  } = useContext(MovieContext);\n\n  const handleDelete = id => {\n    // setData(data.filter((item) => item.id !== id));\n    deleteMovie(id, dispatch);\n  };\n\n  useEffect(() => {\n    getMovies(dispatch);\n  }, [dispatch]);\n  const columns = [{\n    field: \"_id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"movie\",\n    headerName: \"Movie\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"productListImg\",\n          src: params.row.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), params.row.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"genre\",\n    headerName: \"Genre\",\n    width: 120\n  }, {\n    field: \"year\",\n    headerName: \"Year\",\n    width: 120\n  }, {\n    field: \"limit\",\n    headerName: \"Limit\",\n    width: 120\n  }, {\n    field: \"isSeries\",\n    headerName: \"IsSeries\",\n    width: 120\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/product/\" + params.row.id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"productListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => handleDelete(params.row._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: movies,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true,\n      getRowId: r => r._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductList, \"6jVQJdwNr9unbZUtWs6Q+QfsD+8=\");\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/AURES/Desktop/youtube-react-admin/src/pages/productList/ProductList.jsx"],"names":["DataGrid","DeleteOutline","productRows","Link","useState","useContext","useEffect","MovieContext","deleteMovie","getMovies","ProductList","movies","dispatch","handleDelete","id","columns","field","headerName","width","renderCell","params","row","img","title","_id","r"],"mappings":"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","sourcesContent":["import \"./productList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { productRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { MovieContext } from \"../../context/movieContext/MovieContext\";\nimport { deleteMovie, getMovies } from \"../../context/movieContext/apiCalls\";\n\nexport default function ProductList() {\n  const { movies, dispatch } = useContext(MovieContext);\n  const handleDelete = (id) => {\n    // setData(data.filter((item) => item.id !== id));\n    deleteMovie(id, dispatch);\n  };\n  useEffect(() => {\n    getMovies(dispatch);\n  }, [dispatch]);\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"movie\",\n      headerName: \"Movie\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"productListItem\">\n            <img className=\"productListImg\" src={params.row.img} alt=\"\" />\n            {params.row.title}\n          </div>\n        );\n      },\n    },\n    { field: \"genre\", headerName: \"Genre\", width: 120 },\n    { field: \"year\", headerName: \"Year\", width: 120 },\n    { field: \"limit\", headerName: \"Limit\", width: 120 },\n    { field: \"isSeries\", headerName: \"IsSeries\", width: 120 },\n\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={\"/product/\" + params.row.id}>\n              <button className=\"productListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"productList\">\n      <DataGrid\n        rows={movies}\n        disableSelectionOnClick\n        columns={columns}\n        pageSize={8}\n        checkboxSelection\n        getRowId={(r) => r._id}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}